package main

////подкотовка к визуализации
////рассчет дальности Wi-Fi сети
////запуск цикла. Цикл состоит из 7 подходох, каждыйх подход, новая фигура одного роутера
//for j := 0; j < 7; j++ {
//	//расчет радиуса, а также выбор цвета для круга
//	//запуск нового цикла, где n = количеству углов в фигуре, тут будет происходит отрисовка по одному углу
//	for i := 0; i <= n; i++ {
//		// расчет угла
//		//данный цикл будет идти от радиуса до конечной точкой, данный цикл нужен для поиска препятствий
//		for h := 0; float64(h) < r; h++ {
//			//расчет текущий позиции
//			//данный цикл определяет тип препятствия
//			for k := 0; k < len(arrayCoordinatesOfPoint); k++ {
//				if float64(int64(xH)) == arrayCoordinatesOfPoint[k].x && float64(int64(yH)) == arrayCoordinatesOfPoint[k].y {
//					//если препятствие найдено, то радиус будет сокращаться на какой-то значение
//				}
//			}
//		}
//		//происходит отрисовка изображения
//	}
//}
////сохранение изображения

//инициализация переменный
for _, value := range d.coordinatesOfRouters {
	for _, valueOfPoint := range value.RoutersSettingsMigration {
	//определение максимального сигнала в одной точке
	}
	// инициализация переменных
	for _, value := range d.coordinatesOfRouters {
		for _, valueOfPoint := range value.RoutersSettingsMigration {
			if valueOfPoint.MAC == maxPowerOnPoint.router.MAC {
				//определение минимального сигнала в одной точке
			}
		}
	}
	//инициализация переменных
	for i, value := range maxPowers {
		//расчет расстояния между минимальным сигналом и максимальным
	}
	//отрисовка изображения
}